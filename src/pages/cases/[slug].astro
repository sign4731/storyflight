---
import { getData } from '../../helpers/dataFetching.js';
import VideoPlayer from '../../components/VideoPlayer.svelte';

export async function getStaticPaths() {
  const cases = await getData('cases');

  return cases.map((casePost) => {
    return {
      params: { slug: casePost.slug },
      props: { casePost }
    }
  })
}

const { casePost } = Astro.props;
const videoTypesData = await getData('videoTypes');

const videoTypeIDs = casePost.videotypes.filter(id => id !== 11);
const videoType = videoTypesData.find(type => type.id === videoTypeIDs[0])
---

<html>
  <head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" type="text/css" href={Astro.resolve('../../styles/global.scss')} />
    <link rel="stylesheet" href="https://use.typekit.net/qms3myj.css">
  </head>

  <body>
    <main>
      <VideoPlayer 
        client:load
        title={casePost['cases_title']} 
        description={casePost.description}
        videoType={videoType.name}
        videoSrc={casePost.video.guid}
      />
    </main>
  </body>
</html>